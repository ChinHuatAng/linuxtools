####################################################################
# Copyright (c) 2012 Ericsson
# 
# All rights reserved. This program and the accompanying materials are
# made available under the terms of the Eclipse Public License v1.0 which
# accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#  
# Contributors: 
#    Bernd Hufmann - Initial API and implementation
####################################################################
####################################################################
# Scenario: Test no sessions available
####################################################################
<SCENARIO>
Initialize
<COMMAND_INPUT>
lttng list 
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Currently no available tracing session
</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng list -k
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Kernel events
-------------
      sched_kthread_stop (loglevel: TRACE_EMERG (0)) (type: tracepoint)
      sched_kthread_stop_ret (loglevel: TRACE_EMERG (0)) (type: tracepoint)
      sched_wakeup_new (loglevel: TRACE_EMERG (0)) (type: tracepoint)

</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng list -u
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
UST events:
-------------

PID: 9379 - Name: /home/user/git/lttng-ust/tests/hello.cxx/.libs/lt-hello
    ust_tests_hello:tptest_sighandler (loglevel: TRACE_DEBUG_MODULE (10)) (type: tracepoint)
    ust_tests_hello:tptest (loglevel: TRACE_INFO (6)) (type: tracepoint)

PID: 4852 - Name: /home/user/git/lttng-ust/tests/hello.cxx/.libs/lt-hello
    ust_tests_hello:tptest_sighandler (loglevel: TRACE_WARNING (4)) (type: tracepoint)
    ust_tests_hello:tptest (loglevel: TRACE_DEBUG_FUNCTION (12)) (type: tracepoint)

</COMMAND_OUTPUT>
</SCENARIO>

####################################################################
# Scenario: Enable events from kernel provider events
####################################################################
<SCENARIO>
Scenario1
<COMMAND_INPUT>
lttng create mysession
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Session mysession created.
Traces will be written in /home/user/lttng-traces/mysession-20120314-132824
</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng list mysession
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Tracing session mysession: [inactive]
    Trace path: /home/user/lttng-traces/mysession-20120314-132824

</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng enable-event sched_kthread_stop,sched_kthread_stop_ret -k  -s mysession --tracepoint 
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
kernel event sched_kthread_stop created in channel channel0
kernel sched_kthread_stop_ret created in channel channel0
</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng list mysession
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Tracing session mysession: [inactive]
    Trace path: /home/user/lttng-traces/mysession-20120314-132824

=== Domain: Kernel ===

Channels:
-------------
- channel0: [enabled]

    Attributes:
      overwrite mode: 0
      subbufers size: 262144
      number of subbufers: 4
      switch timer interval: 0
      read timer interval: 200
      output: splice()

    Events:
      sched_kthread_stop_ret (loglevel: TRACE_EMERG (0)) (type: tracepoint) [enabled]
      sched_kthread_stop (loglevel: TRACE_EMERG (0)) (type: tracepoint) [enabled]

</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng disable-event sched_kthread_stop_ret,sched_kthread_stop -k  -s mysession -c channel0
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
kernel event sched_kthread_stop_ret disabled in channel channel0
kernel event sched_kthread_stop disabled in channel channel0
</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng enable-event sched_kthread_stop -k  -s mysession -c channel0 --tracepoint 
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
kernel event sched_kthread_stop enabled in channel channel0
</COMMAND_OUTPUT>


<COMMAND_INPUT>
lttng destroy mysession
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Session mysession destroyed.
</COMMAND_OUTPUT>

</SCENARIO>

####################################################################
# Scenario: Enable events from UST provider events
####################################################################
<SCENARIO>
Scenario2
<COMMAND_INPUT>
lttng create mysession -o /home/user/temp
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Session mysession created.
Traces will be written in /home/user/temp
</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng list mysession
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Tracing session mysession: [inactive]
    Trace path: /home/user/temp

</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng enable-channel mychannel -u  -s mysession --subbuf-size 16384 --num-subbuf 2 --switch-timer 200 --read-timer 100
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
UST channel mychannel enabled for session mysession
</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng list mysession
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Tracing session mysession: [inactive]
    Trace path: /home/user/temp

=== Domain: UST global ===

Channels:
-------------
- mychannel: [enabled]

    Attributes:
      overwrite mode: 0
      subbufers size: 16384
      number of subbufers: 2
      switch timer interval: 200
      read timer interval: 100
      output: mmap()

    Events:
      None

</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng enable-event ust_tests_hello:tptest_sighandler,ust_tests_hello:tptest -u  -s mysession --tracepoint 
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
UST event ust_tests_hello:tptest_sighandler in channel channel0
UST sched_ust_tests_hello:tptest created in channel channel0
</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng list mysession
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Tracing session mysession: [inactive]
    Trace path: /home/user/temp

=== Domain: UST global ===

Channels:
-------------
- mychannel: [enabled]

    Attributes:
      overwrite mode: 0
      subbufers size: 16384
      number of subbufers: 2
      switch timer interval: 200
      read timer interval: 100
      output: mmap()

    Events:
      ust_tests_hello:tptest_sighandler (loglevel: TRACE_DEBUG_LINE (13)) (type: tracepoint) [enabled]
      ust_tests_hello:tptest (loglevel: TRACE_DEBUG_LINE (13)) (type: tracepoint) [enabled]

</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng disable-event ust_tests_hello:tptest -u  -s mysession -c mychannel
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
kernel event ust_tests_hello:tptest in channel mychannel
</COMMAND_OUTPUT>

<COMMAND_INPUT>
lttng enable-event ust_tests_hello:tptest -u  -s mysession -c mychannel --tracepoint 
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
kernel event ust_tests_hello:tptest enabled in channel mychannel
</COMMAND_OUTPUT>


<COMMAND_INPUT>
lttng destroy mysession
</COMMAND_INPUT>
<COMMAND_RESULT>
0
</COMMAND_RESULT>
<COMMAND_OUTPUT>
Session mysession destroyed.
</COMMAND_OUTPUT>

</SCENARIO>

