###############################################################################
# Copyright (c) 2009 Red Hat, Inc.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#     Red Hat - initial API and implementation
###############################################################################
LaunchAbout.0=About SystemTap Eclipse plugin
LaunchAbout.10=program was performing the read/write. Runs until killed by user.\n\n
LaunchAbout.11=Function callgraph: Produces a graph of all function calls. You can also mark functions by
LaunchAbout.12=\ pressing CTRL+4 while in the editor. (Warning: Marking functions currently annotates your code
LaunchAbout.13=\ by adding calls to a ___STAP_MARKER___ function.)\n\n
LaunchAbout.14=Function trace: Displays all calls to the specified functions. Script is 
LaunchAbout.15=auto-generated based on user input, you can see the generated
LaunchAbout.16=script in the Generated Scripts tab of Profile Configurations. \n\n
LaunchAbout.17=Launch Wizard: Helper for launching SystemTap scripts.\n\n
LaunchAbout.18=Trace system calls: Displays all system calls detected during execution of specified
LaunchAbout.19=executable, in the order that they were called.\n\n
LaunchAbout.2=-------------SystemTap Eclipse Plugin---------\n
LaunchAbout.20=Thank you for trying the SystemTap Eclipse plugin - if you have any comments or 
LaunchAbout.21=suggestions, please feel free to direct them to the e-mails above\!
LaunchAbout.3=/*********************************************\n
LaunchAbout.4=* Comments and concerns:\n
LaunchAbout.5=*    Charley Wang (chwang@redhat.com)\t\t\n
LaunchAbout.6=*    Roland Grunberg (rgrunber@redhat.com) \n
LaunchAbout.7=*********************************************/\n\n
LaunchAbout.8=Available pre-bundled scripts:\n\n
LaunchAbout.9=File IO monitor: Monitors specified file for reads/writes, displays when these occur and which
LaunchCallGraph.0=Probe which functions?
LaunchCallGraph.1=Select functions to probe.\nSeparate with commas. Use * to probe all functions.
LaunchCallGraph.33=
LaunchCallGraph.34=
LaunchCallGraph.CallgraphName=Callgraph
LaunchCallGraph.SpacingMessage1=Enter number of microseconds to represent with each blank line.\n
LaunchCallGraph.SpacingMessage2=Do not use spaces. Enter 0 to use no extra spacing.
LaunchCallGraph.SpacingTitle=Use time-based spacing?
LaunchStapGraph.26=
LaunchStapGraph.27=Use SystemTap markers?
LaunchStapGraph.28=If you have placed SystemTap markers in the program to be probed, 
LaunchStapGraph.29=please press Yes. Otherwise, please press No.
LaunchStapGraph.30=global markedFunctions\n
LaunchStapGraph.31=global numberMarked\n
LaunchStapGraph.32=global markedMessages\n
LaunchStapGraph.33=global currentlyIn\n
LaunchStapGraph.34=global currentLevel\n
LaunchStapGraph.35=\n
LaunchStapGraph.36=probe process(@1).function("___STAP_MARKER___").call {\n
LaunchStapGraph.37=\tmarkedFunctions[numberMarked] = currentlyIn[currentLevel]\n
LaunchStapGraph.38=\tmarkedMessages[numberMarked] = user_string($i)\n
LaunchStapGraph.39=\tnumberMarked++\n
LaunchStapGraph.40=}\n
LaunchStapGraph.41=parse_function_mark_partial.stp
LaunchStapGraph.42=global serial /*UNIQUE TO EACH FUNCTION*/\n
LaunchStapGraph.43=global start\n
LaunchStapGraph.44=global total\n
LaunchStapGraph.45=global depth /*DEPTH OF ALL FUNCTIONS*/\n
LaunchStapGraph.46=global val  /*DEPTH TRACKER*/\n
LaunchStapGraph.47=global nested /*DEPTH TRACKER FOR OUTERMOST FUNCTION CALL*/\n
LaunchStapGraph.48=global start_total\n
LaunchStapGraph.49=global funcName\n
LaunchStapGraph.50=global exitCalled\n
LaunchStapGraph.FunctionsToProbeMessage=Please specify a list of functions to probe, 
LaunchStapGraph.FunctionsToProbeMessage2=separated by single spaces. Use * as a wildcard.
LaunchStapGraph.FunctionsToProbeTitle=Select functions to probe
LaunchSyscallAll.SyscallAll_Name=SyscallAll
LaunchWizard.0=Welcome to SystemTap Wizard
LaunchWizard.1=The SystemTap Wizard will guide you through the process of launching a 
LaunchWizard.2=script through Eclipse. \n\nFirst, please name your new launch configuration.
LaunchWizard.20=Binary file: 
LaunchWizard.21=Arguments: 
LaunchWizard.22=Function
LaunchWizard.24=Launch
LaunchWizard.3=If the name already exists, a (1), (2), etc. will be appended to make the name unique.\n
LaunchWizard.4=MyWizardLaunch
LaunchWizard.5=Specify Script
LaunchWizard.6=Your launch has been named: 
LaunchWizard.7=Next, please specify the location of the SystemTap script to run.
LaunchWizard.8=Specify executable
LaunchWizard.9=Name: '
LaunchWizard.10='\nScript: 
LaunchWizard.11=If the script is to run on an executable, please specify the location
LaunchWizard.12=of that executable. Click Cancel to run script without an executable.
LaunchWizard.13=Name: '
LaunchWizard.14='\nScript: 
LaunchWizard.15=Binary: 
LaunchWizard.16=None selected\n
LaunchWizard.17=\nPlease specify any arguments separated by a space (eg. arg1 arg2 arg3) 
LaunchWizard.18=or hit cancel to run without arguments.\n
LaunchWizard.19=Script: 
LaunchWizard.WizardName=Wizard
RunSystemTapAction.0=System Tap Command Executing...
SystemTapLaunchShortcut.0=invalid
SystemTapLaunchShortcut.ErrorMessage=Error: Script path not given by : 
SystemTapLaunchShortcut.ErrorMessagename=Error
SystemTapLaunchShortcut.ErrorMessageName=Error
SystemTapLaunchShortcut.ErrorMessageTitle=Script not found
SystemTapLaunchShortcut.InvalidName=Invalid
SystemTapLaunchShortcut.StapLaunchFailed=FailedToLaunch
SystemTapLaunchShortcut.StapLaunchFailedMessage=The launch failed. This could be because of : 
SystemTapLaunchShortcut.StapLaunchFailedTitle=Launch failed
SystemTapOptionsTab.0=Overwrite existing file?
SystemTapOptionsTab.1=The file you have selected currently exists. Overwrite existing file?
SystemTapOptionsTab.10=Prologue-searching  mode.  Activate  heuristics to work around 
SystemTapOptionsTab.11=incorrect debugging information for $target variables.
SystemTapOptionsTab.12=Unoptimized mode.  Disable unused code elision during elaboration.
SystemTapOptionsTab.13=Suppressed  warnings  mode.  Disable warning messages for elided 
SystemTapOptionsTab.14=code in user script.
SystemTapOptionsTab.15=\ Use bulk mode (percpu files) for kernel-to-user data transfer.
SystemTapOptionsTab.16=Collect timing information on the number of times probe executes 
SystemTapOptionsTab.17=and average amount of time spent in each probe.
SystemTapOptionsTab.18=-v: Enable verbose mode
SystemTapOptionsTab.19=Stop after pass \#
SystemTapOptionsTab.2=Increase verbosity for all passes.  Produce a larger  volume  of
SystemTapOptionsTab.20=-k: Keep temporary directories
SystemTapOptionsTab.21=-g: Guru mode (Experts only!)
SystemTapOptionsTab.22=-P: Enable prologue-search mode
SystemTapOptionsTab.23=-u: Disable unused code elision
SystemTapOptionsTab.24=-w: Disable warnings
SystemTapOptionsTab.25=-b: Use bulk mode
SystemTapOptionsTab.26=-t: Collect timing information
SystemTapOptionsTab.27=Without -o option, load module and  start probes, then detach 
SystemTapOptionsTab.28=from the module leaving the probes running.  With -o option, run 
SystemTapOptionsTab.29=staprun in background as a daemon and show its pid.
SystemTapOptionsTab.3=Enable Graphics Mode
SystemTapOptionsTab.30=Ignore out of context variables and substitute with literal 0.
SystemTapOptionsTab.31=For testing, act as though vmlinux and  modules  lack  debugging 
SystemTapOptionsTab.32=information.
SystemTapOptionsTab.33=Generate information on tapset coverage
SystemTapOptionsTab.34=Stop after specified pass. The passes are numbered 1-5: parse, elaborate
SystemTapOptionsTab.35=,  translate,\t compile, run.\tSee the PROCESSING section for 
SystemTapOptionsTab.36=details.
SystemTapOptionsTab.37=Use NUM megabyte buffers for kernel-to-user data transfer.  On a 
SystemTapOptionsTab.38=multiprocessor in bulk mode, this is a per-processor amount.
SystemTapOptionsTab.39=Sets target() to PID. This allows scripts\t to  be\t written  that 
SystemTapOptionsTab.4=\ informative (?) output each time option repeated.
SystemTapOptionsTab.40=filter on a specific process.
SystemTapOptionsTab.41=Graph the output. Enable only if using a generated StapGraph script.
SystemTapOptionsTab.42=Add the given C preprocessor directive to the module Makefile.  
SystemTapOptionsTab.43=These can be used to override limit parameters.
SystemTapOptionsTab.5=Keep the temporary directory after all processing.  This may  be 
SystemTapOptionsTab.6=useful in order to examine the generated C code, or to reuse the 
SystemTapOptionsTab.7=compiled kernel object.
SystemTapOptionsTab.8=Guru mode.  Enable parsing  of  unsafe  expert-level  constructs 
SystemTapOptionsTab.9=like embedded C.
SystemTapOptionsTab.IgnoreBadVars=--skip-badvars: Ignore out of context vars
SystemTapOptionsTab.ForTesting=--ignore-dwarf: Ignore debug info
SystemTapOptionsTab.Arguments=Arguments
SystemTapOptionsTab.BrowseFiles=Browse File System
SystemTapOptionsTab.BufferWith=Buffer with \# bytes:
SystemTapOptionsTab.Button_qInfo=-q : tapset coverage info
SystemTapOptionsTab.ColourCodes=Use colour-codes
SystemTapOptionsTab.CommandsLabel1=Type SystemTap options here:\n 
SystemTapOptionsTab.CommandsLabel2=e.g.: '-v -g -s30' 
SystemTapOptionsTab.CommandsTab=SystemTap options
SystemTapOptionsTab.ConfirmOverwriteFileMessage=Selected file exists - overwrite selected file during Profile?
SystemTapOptionsTab.ConfirmOverwriteFileTitle=Overwrite File?
SystemTapOptionsTab.FilesTab=Script and Output
SystemTapOptionsTab.FileSystem=Browse File System
SystemTapOptionsTab.GeneratedScriptsTab=Generated Scripts
SystemTapOptionsTab.GeneratedScriptsTitle=Script to be generated
SystemTapOptionsTab.GenerateScriptButton=Generate script
SystemTapOptionsTab.LeaveProbesRunning=-F: Leave probes running
SystemTapOptionsTab.MainTabName=SystemTap Configurations
SystemTapOptionsTab.PreprocessorDirective=Add C preprocessor directive
SystemTapOptionsTab.ProbeFunction=Probe function
SystemTapOptionsTab.ResourceButton=Select a Resource
SystemTapOptionsTab.ScriptSelector=Select a SystemTap script
SystemTapOptionsTab.SelectArguments=Enter arguments. Separate with spaces. "Probe Function" will insert a template for probing your program.
SystemTapOptionsTab.SelectBinary=Select a binary\n(Optional)
SystemTapOptionsTab.SelectOutput=Select output file\n(Optional)
SystemTapOptionsTab.SelectResource=Select a Resource
SystemTapOptionsTab.SelectSuppressions=Select a Suppressions File
SystemTapOptionsTab.SuppresionsFile=Select a Suppressions File
SystemTapOptionsTab.TargetPID=Target process pid:
SystemTapOptionsTab.WorkspaceButton=Browse Workspace
SystemTapOptionsTab.WorkspaceButton2=Browse Workspace
