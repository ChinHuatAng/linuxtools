2009-03-11  Elliott Baron  <ebaron@redhat.com>

	* src/org/eclipse/linuxtools/valgrind/launch/messages.properties: 
	* src/org/eclipse/linuxtools/valgrind/launch/ValgrindLaunchConfigurationDelegate.java:
	(launch): Use new findValgrindLocation method.
	(getPlugin): New method for subclassing.
	* ValgrindLaunchPlugin.java (findValgrindVersion): New method.
	(getValgrindCommand): New method for subclassing.
	(findValgrindLocation): New method.
	* ValgrindOptionsTab.java (handleToolChanged): Call recomputeSize.
	(createBasicOptions): New UI.
	(recomputeSize): New method.
	(createErrorOptions): New UI.
	(createControl): Find Valgrind version upon creation; use ScrolledComposite; redesigned UI.
	(isValid): Check version obtained correctly.
	(getDynamicTab): Call getPlugin() for subclassing.
	(createSuppressionsOption): New UI.

2009-02-27  Elliott Baron  <ebaron@redhat.com>

	* IValgrindOutputDirectoryProvider.java: Clarified comment.
	* ValgrindLaunchConfigurationDelegate.java: Ensure files to delete when cleaning
	output directory are not directories themselves.

2009-02-25  Elliott Baron  <ebaron@redhat.com>

	* IValgrindLaunchDelegate.java: Renamed launch to handleLaunch.
	* ValgrindLaunchConfigurationDelegate.java (handleValgrindError): Extracted.
	(getDynamicDelegate): Extracted.
	(launch): Various changes to facilitate subclassing.
	(getValgrindCommand): Extracted.

2009-02-20  Elliott Baron  <ebaron@redhat.com>

	* IValgrindOutputDirectoryProvider.java (getOutputPath): No longer responsible for
	creating/emptying directory. Simply return path.
	* ValgrindLaunchConfigurationDelegate.java (createDirectory): Receive role of above. 
	(setOutputPath): Stores output directory in LaunchConfiguration.
	(launch): Changes from above.
	* ValgrindOptionsTab.java: No longer sets output directory. Moved to delegate for
	compatibility with old Launch Configurations.
	* ValgrindOutputDirectoryProvider.java (getOutputPath): Changes from interface. 

2009-02-12  Elliott Baron  <ebaron@redhat.com>

	* schema/org.eclipse.linuxtools.valgrind.launch.valgrindTools.exsd: Renamed.
	* schema/outputDirectoryProviders.exsd: New file.
	* schema/valgrindTools.exsd: New file.
	* IValgrindOutputDirectoryProvider.java: New file.
	* ValgrindOutputDirectoryProvider.java: New file.
	* META-INF/MANIFEST.MF: Removed core.util import.
	* plugin.properties: New key for new extension point.
	* plugin.xml: New extension point for output directory handling.
	* IValgrindLaunchDelegate.java: Passing ValgrindCommand removed.
	* messages.properties: New keys.
	* ValgrindLaunchConfigurationDelegate.java
	(verifyOutputPath): Retrieve path for output directory, optionally from extension point.
	(launch): New output directory handling, store command line in IProcess, removed passing
	of ValgrindCommand to tool extension.
	* ValgrindLaunchPlugin.java (getOutputDirectoryProvider): Retrieve path for output directory,
	optionally from extension point.
	* ValgrindLaunchShortcut.java: Update with refactored constants.
	* ValgrindOptionsTab.java
	(setDefaults): Refactoring.
	(performApply): Likewise.
	(initializeFrom): Likewise.
	(createToolCombo): Switch toolsCombo from SelectionListener to ModifyListener. 
	(setOutputDirectory): Store output directory in launch config.

2009-02-02  Elliott Baron  <ebaron@redhat.com>

	* ValgrindLaunchConfigurationDelegate: Use DebugUITools to retrieve IProcess'
	console. 

2009-01-05  Elliott Baron  <ebaron@redhat.com>

	* ValgrindLaunchConfigurationDelegate: Graceful handling for absence of
	Valgrind. Also Valgrind view will display the absolute path of valgrind
	that was launched.
	* messages.properties: New key.

2009-01-05  Elliott Baron  <ebaron@redhat.com>

	* META-INF/MANIFEST.MF: Changed version to 0.1.0.
	* build.properties: Include about.html and icons.